#!/usr/bin/env ruby
require File.expand_path(File.dirname(__FILE__) + '/shared')

def apply(pattern, permissions)
	Dir[pattern].each do |filename|
		old_status = `ls -l "#{filename}"; getfacl "#{filename}"`
		permissions.each do |permission|
			case permission
			when /^mode (.+)/
				maybe_quiet_sh "chmod -c #{$1} #{files}"
			when /^acl (.+)/
				maybe_quiet_sh "setfacl -m #{$1} #{files}"
			else
				abort "Unsupported permission format #{permission.inspect} for #{pattern.inspect}"
			end
		end
		new_status = `ls -l "#{filename}"; getfacl "#{filename}"`
		if old_status != new_status
			report_diff_status(filename, old_status, new_status)
		end
	end
end

def maybe_quiet_sh(command, *args)
	sh(command, *args)
end

def report_diff_status(filename, old_status, new_status)
	puts "Permissions of #{filename} changed:"
	puts reindent(3, old_status)
	puts "   --- vs ---"
	puts reindent(3, new_status)
	puts
end

def apply_all
	config(:permissions).each_pair do |pattern, permissions|
		apply(pattern, permissions)
	end
end

apply_all

#!/usr/bin/env ruby
if ARGV.size < 1
	STDERR.puts "Usage: ./run_in_pv COMMAND..."
	exit 1
end

pv_in, pv_out = IO.pipe
pv = fork do
	STDIN.reopen(pv_in)
	pv_out.close
	exec("pv")
end
pv_in.close

child = fork do
	STDOUT.reopen(pv_out)
	exec(*ARGV)
end
pv_out.close

def get_signal_name(signal_exception)
	if signal_exception.is_a?(Interrupt)
		return "SIGINT"
	else
		return signal_exception.signm
	end
end

begin
	Process.waitpid(child)
	child_status = $?
rescue Errno::ESRCH, Errno::ECHILD
rescue SignalException => e
	signame = get_signal_name(e)
	Process.kill(signame, child)
	Process.waitpid(child)
	child_status = $?
end
begin
	Process.waitpid(pv)
rescue Errno::ESRCH, Errno::ECHILD
end
if child_status
	exit child_status.exitstatus
else
	exit 1
end
